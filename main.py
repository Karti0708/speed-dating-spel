import tkinter as tk
from tkinter import ttk, messagebox
import random

class DatingApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Personlighetstest Dating Simulator")
        self.root.geometry("600x500")
        
        
        self.fr친gor = [
            ("F칬redrar du en kv칛ll hemma eller ute p친 stan?", "Hemma", "Ute"),
            ("Vilket 칛r din favoritmat?", "Pizza", "Sushi"),
            ("Vilken typ av film f칬redrar du?", "Action", "Romantik"),
            ("F칬redrar du sommar eller vinter?", "Sommar", "Vinter"),
            ("Vilket djur passar dig b칛st?", "Hund", "Katt"),
            ("Vilken musik lyssnar du mest p친?", "Pop", "Rock"),
            ("Vad g칬r du helst p친 ledig dag?", "Vila", "츿ventyr"),
            ("Vilken drink f칬redrar du?", "칐l", "Vin"),
            ("Vilken f칛rg passar dig b칛st?", "Bl친", "R칬d"),
            ("Vilken 친rstid f칬ds du?", "V친r/Sommar", "H칬st/Vinter")
        ]
        
        
        self.all_karakt칛rer = self.skapa_karakt칛rer()
        self.karakt칛rer = []
        self.spelarens_svar = []
        self.current_fr친ga = 0
        self.current_frame = None
        self.valt_k칬n = ""
        
        self.skapa_k칬n_val()

    def skapa_karakt칛rer(self):
        
        man_namn = ["Erik", "Lars", "Johan", "Anders", "Mikael"]
        kvinna_namn = ["Anna", "Maria", "Karin", "Emma", "Sofia"]
        
        karakt칛rer = []
        
        for namn in man_namn:
            karakt칛rer.append({
                "namn": namn,
                "k칬n": "Man",
                "svar": [random.choice([0,1]) for _ in self.fr친gor],
                "bild": self.skapa_placeholder_f칛rg()
            })
       
        for namn in kvinna_namn:
            karakt칛rer.append({
                "namn": namn,
                "k칬n": "Kvinna",
                "svar": [random.choice([0,1]) for _ in self.fr친gor],
                "bild": self.skapa_placeholder_f칛rg()
            })
        return karakt칛rer

    def skapa_placeholder_f칛rg(self):
        f칛rger = ["#FFB6C1", "#87CEEB", "#98FB98", "#DDA0DD", "#FFA07A",
                 "#20B2AA", "#FFD700", "#CD5C5C", "#7B68EE", "#FF6347"]
        return random.choice(f칛rger)
    
    def skapa_k칬n_val(self):
        self.rensa_gui()
        tk.Label(self.root, text="V칛lj vilket k칬n du 칛r intresserad av", 
                font=("Helvetica", 16, "bold")).pack(pady=30)
        
        knapp_frame = tk.Frame(self.root)
        knapp_frame.pack(pady=20)
        
        tk.Button(knapp_frame, text="Man 游녿", command=lambda: self.v칛lj_k칬n("Man"),
                 bg="#2196F3", fg="white", font=("Helvetica", 14), width=15).grid(row=0, column=0, padx=10)
        tk.Button(knapp_frame, text="Kvinna 游놀", command=lambda: self.v칛lj_k칬n("Kvinna"),
                 bg="#E91E63", fg="white", font=("Helvetica", 14), width=15).grid(row=0, column=1, padx=10)
    
    def v칛lj_k칬n(self, k칬n):
        self.valt_k칬n = k칬n
        self.karakt칛rer = [k for k in self.all_karakt칛rer if k["k칬n"] == k칬n]
        self.starta_testet()
    
    def starta_testet(self):
        self.rensa_gui()
        self.visa_fr친ga()
    
    def visa_fr친ga(self):
        if self.current_frame:
            self.current_frame.destroy()
        
        self.current_frame = tk.Frame(self.root)
        self.current_frame.pack(pady=20)
        
        if self.current_fr친ga >= len(self.fr친gor):
            self.visa_resultat()
            return
        
        fr친ga, alt1, alt2 = self.fr친gor[self.current_fr친ga]
        
        tk.Label(self.current_frame, text=fr친ga, 
                font=("Helvetica", 14), wraplength=400).pack(pady=10)
        
        knapp_frame = tk.Frame(self.current_frame)
        knapp_frame.pack(pady=15)
        
        tk.Button(knapp_frame, text=alt1, command=lambda: self.spara_svar(0),
                 width=15, bg="#2196F3", fg="white", font=("Helvetica", 12)).grid(row=0, column=0, padx=10)
        tk.Button(knapp_frame, text=alt2, command=lambda: self.spara_svar(1),
                 width=15, bg="#2196F3", fg="white", font=("Helvetica", 12)).grid(row=0, column=1, padx=10)
        
        self.progress = ttk.Progressbar(self.current_frame, orient="horizontal", 
                                      length=400, mode="determinate",
                                      maximum=len(self.fr친gor))
        self.progress.pack(pady=10)
        self.progress["value"] = self.current_fr친ga + 1
        
        tk.Label(self.current_frame, text=f"Fr친ga {self.current_fr친ga + 1} av {len(self.fr친gor)}",
                font=("Helvetica", 10)).pack()
    
    def spara_svar(self, svar):
        self.spelarens_svar.append(svar)
        self.current_fr친ga += 1
        self.visa_fr친ga()
    
    def ber칛kna_match(self, karakt칛r_svar):
        matchande = sum(1 for p, k in zip(self.spelarens_svar, karakt칛r_svar) if p == k)
        return (matchande / len(self.fr친gor)) * 100
    
    def visa_resultat(self):
        self.current_frame.destroy()
        self.current_frame = tk.Frame(self.root)
        self.current_frame.pack(pady=20)
        
        resultat = []
        for karakt칛r in self.karakt칛rer:
            procent = self.ber칛kna_match(karakt칛r["svar"])
            resultat.append((karakt칛r["namn"], procent, karakt칛r["bild"], karakt칛r["k칬n"]))
        
        resultat.sort(key=lambda x: x[1], reverse=True)
        
        tk.Label(self.current_frame, text=f"Dina matcher ({self.valt_k칬n}):", 
                font=("Helvetica", 14, "bold")).pack(pady=10)
        
        canvas = tk.Canvas(self.current_frame)
        scrollbar = ttk.Scrollbar(self.current_frame, orient="vertical", command=canvas.yview)
        scroll_frame = tk.Frame(canvas)
        
        canvas.pack(side="left", fill="both", expand=True)
        scrollbar.pack(side="right", fill="y")
        
        canvas.configure(yscrollcommand=scrollbar.set)
        canvas.create_window((0,0), window=scroll_frame, anchor="nw")
        
        for namn, procent, f칛rg, k칬n in resultat:
            match_frame = tk.Frame(scroll_frame, bd=1, relief="solid", padx=10, pady=5)
            match_frame.pack(fill="x", padx=10, pady=5)
            
            tk.Label(match_frame, bg=f칛rg, width=10, height=3).pack(side="left", padx=5)
            tk.Label(match_frame, text=f"{namn}\n{procent:.1f}% match\n{k칬n}", 
                    font=("Helvetica", 12)).pack(side="left", padx=10)
        
        scroll_frame.update_idletasks()
        canvas.config(scrollregion=canvas.bbox("all"))
        
        tk.Button(self.current_frame, text="G칬r om testet", command=self.친terst칛ll,
                 bg="#9C27B0", fg="white", font=("Helvetica", 12)).pack(pady=20)
    
    def 친terst칛ll(self):
        self.spelarens_svar = []
        self.current_fr친ga = 0
        self.current_frame.destroy()
        self.skapa_k칬n_val()
    
    def rensa_gui(self):
        for widget in self.root.winfo_children():
            widget.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    app = DatingApp(root)
    root.mainloop()